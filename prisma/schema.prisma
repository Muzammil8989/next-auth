// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// Using string for role instead of enum to avoid type issues
model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String    @unique
    password      String
    emailVerified DateTime?
    image         String?
    role          String    @default("USER") // Using string instead of enum
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    tokens        Token[]
}

model Token {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    token        String   @unique // The actual token string
    refreshToken String? // Optional refresh token for token rotation
    expires      DateTime // When the token expires
    userId       String   @db.ObjectId
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    type         String // "ACCESS", "REFRESH", "RESET_PASSWORD", "VERIFY_EMAIL", etc.

    // Additional fields for token management
    lastUsed  DateTime? // Track when the token was last used
    revoked   Boolean   @default(false) // Flag to mark if token has been revoked
    userAgent String? // Store user agent information for security
    ipAddress String? // Store IP address for security

    @@index([userId])
    @@index([type])
}
